## posix-signal.pkg
#
## POSIX 1003.1 signals.
# This is a subpackage of the POSIX 1003.1 based
# 'Posix_1003_1b' package
#
#     src/lib/std/src/posix-1003.1b/posix-1003-1b.pkg

# Compiled by:
#     src/lib/std/src/standard-core.sublib





###                        "Fear is the main source of superstition,
###                         and one of the main sources of cruelty.
###                         To conquer fear is the beginning of wisdom."
###
###                                             -- Bertrand Russell 



stipulate
    package hi  =  host_int;							# host_int				is from   src/lib/std/src/posix-1003.1b/host-int.pkg
    package hug =  host_unt_guts;						# host_unt_guts				is from   src/lib/std/src/bind-sysword-32.pkg
    package ci  =  mythryl_callable_c_library_interface;			# mythryl_callable_c_library_interface	is from   src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg
    #
    fun cfun  fun_name
	=
	ci::find_c_function'' { lib_name => "posix_signal", fun_name };
herein

    package posix_signal {							# Posix_Signal				is from   src/lib/std/src/posix-1003.1b/posix-signal.api
	#
	Signal = SIGNAL hi::Int;

	fun to_unt   (SIGNAL i) =  hug::from_int i;
	fun from_unt  w         =  SIGNAL (hug::to_int w);

	(cfun "osval")								# osval					def in    src/c/lib/posix-signal/osval.c
	    ->
	    (      osval5__syscall:    String -> hi::Int,			# The '5's are just to avoid any "duplicate definition" errors when we get included into the master posix package.
		   osval5__ref,
	      set__osval5__ref
	    );

	fun osval string
	    =
	    *osval5__ref  string;

	abrt =  SIGNAL (osval "abrt");
	alrm =  SIGNAL (osval "alrm");
	fpe  =  SIGNAL (osval "fpe");
	hup  =  SIGNAL (osval "hup");
	ill  =  SIGNAL (osval "ill");
	int  =  SIGNAL (osval "int");
	kill =  SIGNAL (osval "kill");
	pipe =  SIGNAL (osval "pipe");
	quit =  SIGNAL (osval "quit");
	segv =  SIGNAL (osval "segv");
	term =  SIGNAL (osval "term");
	usr1 =  SIGNAL (osval "usr1");
	usr2 =  SIGNAL (osval "usr2");
	chld =  SIGNAL (osval "chld");
	cont =  SIGNAL (osval "cont");
	stop =  SIGNAL (osval "stop");
	tstp =  SIGNAL (osval "tstp");
	ttin =  SIGNAL (osval "ttin");
	ttou =  SIGNAL (osval "ttou");
	bus  =  SIGNAL (osval "bus");

    }; #  package posix_signal 
end;



## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
