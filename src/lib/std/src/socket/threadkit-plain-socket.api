## threadkit-plain-socket.api

# Compiled by:
#     src/lib/std/standard.lib



###                "Probably the glaring error in Unix was that
###                 it undervalued the concept of remoteness."
###
###                                          -- Ken Thompson



stipulate
    package pre =  threadkit_proto_socket;			# threadkit_proto_socket	is from   src/lib/std/src/socket/threadkit-proto-socket.pkg
    package sok =  socket_guts;					# socket_guts			is from   src/lib/std/src/socket/socket-guts.pkg
herein

    # This api is implemented by:
    #     src/lib/std/src/socket/threadkit-plain-socket.pkg
    #
    api Threadkit_Plain_Socket {


    /*
	addressFamilies:  Void -> List( sok::af::addr_family )
	    /* returns a list of the supported address families; this should include
	     * at least:  sok::af::inet.
	     */

	socketTypes:  Void -> sok::SOCKET::sock_type
	    /* returns a list of the supported socket types; this should include at
	     * least:  sok::SOCKET::stream and sok::SOCKET::dgram.
	     */
    */

	# Create socket/pair using default protocol: 
	#
	make_socket
	    :
	    ( sok::af::Address_Family,
	      sok::socket::Socket_Type
	    )
	    ->
	    pre::Threadkit_Socket( X, Y );
	#
	make_socket_pair
	    :
	    ( sok::af::Address_Family,
	      sok::socket::Socket_Type
	    )
	    ->
	    ( pre::Threadkit_Socket( X, Y ),
	      pre::Threadkit_Socket( X, Y )
	    );

	# Create socket using the specified protocol 
	#
	make_socket'
	    :
	    ( sok::af::Address_Family,
	      sok::socket::Socket_Type,
	      Int
	    )
	    ->
	    pre::Threadkit_Socket( X, Y );
	#
	make_socket_pair'
	    :
	    ( sok::af::Address_Family,
	      sok::socket::Socket_Type,
	      Int
	    )
	    ->
	    ( pre::Threadkit_Socket( X, Y ),
	      pre::Threadkit_Socket( X, Y )
	    );

    };
end;


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2012,
## released under Gnu Public Licence version 3.
